-- 事前に既存のテーブルが存在する場合に備えて削除（実行順序に注意）
DROP TABLE IF EXISTS public.word_occurrences;
DROP TABLE IF EXISTS public.unique_words;
DROP TABLE IF EXISTS public.crawled_urls;
DROP TABLE IF EXISTS public.stop_words;

-- 1. クロール済みURLを記録するテーブル
CREATE TABLE public.crawled_urls (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  url TEXT NOT NULL UNIQUE,
  crawled_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);
-- アクセス権を設定
ALTER TABLE public.crawled_urls ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.crawled_urls FOR ALL USING (true) WITH CHECK (true);

-- 2. 除外する単語（ストップワード）を管理するテーブル
CREATE TABLE public.stop_words (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  word TEXT NOT NULL UNIQUE,
  reason TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);
-- アクセス権を設定
ALTER TABLE public.stop_words ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.stop_words FOR ALL USING (true) WITH CHECK (true);

-- 3. ユニークな新語を保存するマスターテーブル
CREATE TABLE public.unique_words (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  word TEXT NOT NULL UNIQUE,
  pos TEXT,
  discovered_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);
-- アクセス権を設定
ALTER TABLE public.unique_words ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.unique_words FOR ALL USING (true) WITH CHECK (true);

-- 4. 新語の出現場所を記録するテーブル
CREATE TABLE public.word_occurrences (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  word_id BIGINT NOT NULL REFERENCES public.unique_words(id) ON DELETE CASCADE, -- マスターの単語が消えたら一緒に消える
  source_url TEXT NOT NULL,
  CONSTRAINT unique_occurrence UNIQUE (word_id, source_url)
);
-- アクセス権を設定
ALTER TABLE public.word_occurrences ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.word_occurrences FOR ALL USING (true) WITH CHECK (true);
