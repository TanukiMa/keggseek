-- =========== GiNZA + Stanza パイプライン用 初期セットアップSQL ============

-- 既存のオブジェクトを安全に削除
DROP TABLE IF EXISTS public.word_occurrences;
DROP TABLE IF EXISTS public.unique_words;
DROP TABLE IF EXISTS public.crawl_queue;
DROP TYPE IF EXISTS public.crawl_status;
-- ... (その他古いオブジェクトも必要に応じて削除)

-- 1. URLの状態を管理する中央キューテーブル
CREATE TYPE public.crawl_status AS ENUM ('queued', 'processing', 'completed', 'failed');
CREATE TABLE public.crawl_queue (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  url TEXT NOT NULL UNIQUE,
  status public.crawl_status NOT NULL DEFAULT 'queued',
  content_hash TEXT,
  processed_at TIMESTAMPTZ,
  error_message TEXT
);
ALTER TABLE public.crawl_queue ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.crawl_queue FOR ALL USING (true) WITH CHECK (true);

-- 2. 発見したユニークな単語のマスターテーブル
CREATE TABLE public.unique_words (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  word TEXT NOT NULL,
  source_tool TEXT NOT NULL, -- 'ginza' または 'stanza'
  entity_category TEXT,      -- 固有表現カテゴリ (例: 'Person', 'PRODUCT')
  pos_tag TEXT,              -- 品詞タグ (例: '名詞,普通名詞')
  discovered_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
  -- 単語と発見ツールの組み合わせでユニークにする
  CONSTRAINT unique_word_per_tool UNIQUE (word, source_tool)
);
ALTER TABLE public.unique_words ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.unique_words FOR ALL USING (true) WITH CHECK (true);

-- 3. 単語の出現場所を記録するテーブル
CREATE TABLE public.word_occurrences (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  word_id BIGINT NOT NULL REFERENCES public.unique_words(id) ON DELETE CASCADE,
  source_url TEXT NOT NULL,
  CONSTRAINT unique_occurrence UNIQUE (word_id, source_url)
);
ALTER TABLE public.word_occurrences ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public access" ON public.word_occurrences FOR ALL USING (true) WITH CHECK (true);

-- (stop_words, ユーザー辞書テーブルは必要に応じて別途作成してください)
