# .github/workflows/crawler.yml
name: New Word Crawler 4 kegg drug

on:
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4
      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: 3. Install dependencies
        run: pip install requests beautifulsoup4 supabase configparser url-normalize
      - name: 4. Run URL Discoverer
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: python discover_urls.py

  process:
    needs: discover
    runs-on: ubuntu-latest
    timeout-minutes: 350
    strategy:
      matrix:
        instance: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
#        instance: [1]
    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4
      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: 3. Install all dependencies
        run: |
          pip install sudachipy SudachiDict-full
          pip install requests beautifulsoup4 supabase configparser
      
      - name: 4. Build User Dictionary Source from Supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: python build_dict_source.py
        
      - name: 4a. Display Generated Dictionary Source for Debugging
        if: always()
        run: |
          echo "--- Contents of user_dict_source.csv (first 10 lines) ---"
          head -n 10 user_dict_source.csv || echo "user_dict_source.csv not found or is empty."
          echo "----------------------------------------------------------"
        
      - name: 5. Compile User Dictionary and Prepare Config
        run: |
          # 5-1. Pythonでシステム辞書のフルパスを取得 (system.dicが正しい名前)
          SYSTEM_DICT_PATH=$(python -c "import sudachidict_full, os; print(os.path.join(os.path.dirname(sudachidict_full.__file__), 'resources', 'system.dic'))")
          
          # 5-2. ユーザー辞書ソースが存在する場合のみビルド
          USER_DICT_PATH_VAR=""
          if [ -s user_dict_source.csv ]; then
            echo "CSV source found. Compiling user dictionary..."
            sudachipy ubuild -s "${SYSTEM_DICT_PATH}" -o user.dict user_dict_source.csv
            USER_DICT_PATH_VAR="user.dict"
          fi

          # 5-3. Sudachiの設定ファイル(sudachi.json)を動的に生成
          echo "Generating sudachi.json..."
          if [ -n "${USER_DICT_PATH_VAR}" ]; then
            # ユーザー辞書がある場合
            JSON_CONFIG="{\"systemDict\":\"${SYSTEM_DICT_PATH}\",\"userDict\":[\"${USER_DICT_PATH_VAR}\"]}"
          else
            # ユーザー辞書がない場合
            JSON_CONFIG="{\"systemDict\":\"${SYSTEM_DICT_PATH}\"}"
          fi
          echo ${JSON_CONFIG} > sudachi.json
          echo "Generated sudachi.json:"
          cat sudachi.json

          # 5-4. 設定ファイルのパスを次のステップに渡す
          echo "SUDACHI_CONFIG_PATH=sudachi.json" >> $GITHUB_ENV

      - name: 6. Run Queue Processor
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          # Sudachiの設定ファイルパスを環境変数で渡す
          SUDACHI_CONFIG_PATH: ${{ env.SUDACHI_CONFIG_PATH }}
        run: python process_queue.py
